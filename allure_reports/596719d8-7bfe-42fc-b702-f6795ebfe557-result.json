{"name": "test_add_comment", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=102.0.5005.63)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0029D953+2414931]\n\tOrdinal0 [0x0022F5E1+1963489]\n\tOrdinal0 [0x0011C580+836992]\n\tOrdinal0 [0x001101E2+786914]\n\tOrdinal0 [0x00110A18+789016]\n\tOrdinal0 [0x001122F2+795378]\n\tOrdinal0 [0x0010BCA9+769193]\n\tOrdinal0 [0x0011DA30+842288]\n\tOrdinal0 [0x00173FF2+1196018]\n\tOrdinal0 [0x001642B6+1131190]\n\tOrdinal0 [0x0013E860+976992]\n\tOrdinal0 [0x0013F756+980822]\n\tGetHandleVerifier [0x0050CC62+2510274]\n\tGetHandleVerifier [0x004FF760+2455744]\n\tGetHandleVerifier [0x0032EABA+551962]\n\tGetHandleVerifier [0x0032D916+547446]\n\tOrdinal0 [0x00235F3B+1990459]\n\tOrdinal0 [0x0023A898+2009240]\n\tOrdinal0 [0x0023A985+2009477]\n\tOrdinal0 [0x00243AD1+2046673]\n\tBaseThreadInitThunk [0x7553FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x773C7A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x773C7A4E+238]\n\t(No symbol) [0x00000000]", "trace": "def test_add_comment():\n>       driver.get('http://localhost/wp-test/2022/05/10/test-post/')\n\ntests\\test_website_updated.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:442: in get\n    self.execute(Command.GET, {'url': url})\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000012955F28040>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"chrome not reachable\",\"message\":\"chrome not reachable\\\\n  (Session info: ...jectPath [0x773C7A7E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x773C7A4E+238]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: chrome not reachable\nE         (Session info: chrome=102.0.5005.63)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x0029D953+2414931]\nE       \tOrdinal0 [0x0022F5E1+1963489]\nE       \tOrdinal0 [0x0011C580+836992]\nE       \tOrdinal0 [0x001101E2+786914]\nE       \tOrdinal0 [0x00110A18+789016]\nE       \tOrdinal0 [0x001122F2+795378]\nE       \tOrdinal0 [0x0010BCA9+769193]\nE       \tOrdinal0 [0x0011DA30+842288]\nE       \tOrdinal0 [0x00173FF2+1196018]\nE       \tOrdinal0 [0x001642B6+1131190]\nE       \tOrdinal0 [0x0013E860+976992]\nE       \tOrdinal0 [0x0013F756+980822]\nE       \tGetHandleVerifier [0x0050CC62+2510274]\nE       \tGetHandleVerifier [0x004FF760+2455744]\nE       \tGetHandleVerifier [0x0032EABA+551962]\nE       \tGetHandleVerifier [0x0032D916+547446]\nE       \tOrdinal0 [0x00235F3B+1990459]\nE       \tOrdinal0 [0x0023A898+2009240]\nE       \tOrdinal0 [0x0023A985+2009477]\nE       \tOrdinal0 [0x00243AD1+2046673]\nE       \tBaseThreadInitThunk [0x7553FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x773C7A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x773C7A4E+238]\nE       \t(No symbol) [0x00000000]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: WebDriverException"}, "start": 1655230982243, "stop": 1655230994377, "uuid": "5f5d7994-bb7d-426f-9283-35ebe12be554", "historyId": "18e38ece6868a7058965eaecae55a9cc", "testCaseId": "4b67980db89ce359c96d5d03b1277a46", "fullName": "tests.test_website_updated#test_add_comment", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_website_updated"}, {"name": "host", "value": "U8HI6O6-NAZARII"}, {"name": "thread", "value": "18780-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_website_updated"}]}